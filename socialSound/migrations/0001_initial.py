# Generated by Django 5.1.3 on 2024-12-02 18:03

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Usuario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('nombre_usuario', models.CharField(max_length=100, unique=True)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('bio', models.TextField(blank=True)),
                ('ciudad', models.CharField(blank=True, max_length=150)),
                ('foto_perfil', models.ImageField(blank=True, upload_to='fotos_perfil/')),
                ('fecha_nac', models.DateField()),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Album',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titulo', models.CharField(max_length=200)),
                ('artista', models.CharField(max_length=200)),
                ('fecha_subida', models.DateField(default=django.utils.timezone.now)),
                ('portada', models.ImageField(blank=True, upload_to='album_portadas/')),
                ('descripcion', models.TextField(blank=True)),
                ('reposts', models.ManyToManyField(blank=True, related_name='reposts_albumes', to=settings.AUTH_USER_MODEL)),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Cancion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('etiqueta', models.CharField(choices=[('rock', 'Rock'), ('jazz', 'Jazz'), ('metal', 'Metal'), ('electronica', 'Electrónica'), ('pop', 'Pop'), ('hiphop', 'Hip-Hop'), ('reggae', 'Reggae'), ('blues', 'Blues'), ('classical', 'Clásica'), ('country', 'Country'), ('dance', 'Dance'), ('disco', 'Disco'), ('dubstep', 'Dubstep'), ('edm', 'EDM (Electronic Dance Music)'), ('funk', 'Funk'), ('gospel', 'Gospel'), ('grunge', 'Grunge'), ('hardrock', 'Hard Rock'), ('indie', 'Indie'), ('latin', 'Latina'), ('lofi', 'Lo-Fi'), ('opera', 'Ópera'), ('punk', 'Punk'), ('rnb', 'R&B (Rhythm and Blues)'), ('rap', 'Rap'), ('salsa', 'Salsa'), ('soul', 'Soul'), ('techno', 'Techno'), ('trance', 'Trance'), ('trap', 'Trap'), ('house', 'House'), ('ambient', 'Ambient'), ('acoustic', 'Acústica'), ('alternative', 'Alternativa'), ('chillout', 'Chillout'), ('drumandbass', 'Drum and Bass'), ('electro', 'Electro'), ('experimental', 'Experimental'), ('folk', 'Folk'), ('hardcore', 'Hardcore'), ('idm', 'IDM (Intelligent Dance Music)'), ('industrial', 'Industrial'), ('kpop', 'K-Pop'), ('metalcore', 'Metalcore'), ('newage', 'New Age'), ('noise', 'Noise'), ('progressiverock', 'Progressive Rock'), ('psytrance', 'Psytrance'), ('reggaeton', 'Reggaetón'), ('synthwave', 'Synthwave'), ('vaporwave', 'Vaporwave'), ('world', 'World Music'), ('ska', 'Ska'), ('tango', 'Tango'), ('grindcore', 'Grindcore'), ('postrock', 'Post-Rock'), ('drill', 'Drill'), ('shoegaze', 'Shoegaze'), ('glitch', 'Glitch'), ('breakbeat', 'Breakbeat'), ('emo', 'Emo'), ('christian', 'Cristiana'), ('jpop', 'J-Pop'), ('jrock', 'J-Rock'), ('futurebass', 'Future Bass'), ('progressivehouse', 'Progressive House'), ('moombahton', 'Moombahton'), ('dancehall', 'Dancehall'), ('dub', 'Dub')], max_length=50)),
                ('titulo', models.CharField(max_length=200)),
                ('artista', models.CharField(max_length=100)),
                ('archivo_audio', models.FileField(upload_to='canciones/')),
                ('portada', models.ImageField(blank=True, upload_to='cancion_portadas/')),
                ('fecha_subida', models.DateTimeField(default=django.utils.timezone.now)),
                ('album', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='canciones', to='socialSound.album')),
                ('reposts', models.ManyToManyField(blank=True, related_name='reposts_canciones', to=settings.AUTH_USER_MODEL)),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='CancionPlaylist',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('orden', models.PositiveIntegerField(default=0)),
                ('fecha_agregada', models.DateTimeField(default=django.utils.timezone.now)),
                ('cancion', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='socialSound.cancion')),
            ],
        ),
        migrations.CreateModel(
            name='Comentario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contenido', models.TextField()),
                ('fecha_publicacion', models.DateTimeField(default=django.utils.timezone.now)),
                ('album', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='socialSound.album')),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='DetalleAlbum',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('productor', models.CharField(max_length=200)),
                ('estudio_grabacion', models.CharField(blank=True, max_length=200)),
                ('numero_pistas', models.PositiveIntegerField()),
                ('sello_discografico', models.CharField(blank=True, max_length=100)),
                ('album', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='album', to='socialSound.album')),
            ],
        ),
        migrations.CreateModel(
            name='DetallesCancion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('letra', models.TextField(blank=True)),
                ('creditos', models.TextField(blank=True)),
                ('duracion', models.DurationField()),
                ('idioma', models.CharField(blank=True, max_length=50)),
                ('cancion', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='detalles', to='socialSound.cancion')),
            ],
        ),
        migrations.CreateModel(
            name='EstadisticasAlbum',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reproducciones', models.PositiveIntegerField(default=0)),
                ('likes', models.PositiveIntegerField(default=0)),
                ('comentarios', models.PositiveIntegerField(default=0)),
                ('album', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='socialSound.album')),
            ],
        ),
        migrations.CreateModel(
            name='Like',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha_like', models.DateTimeField(default=django.utils.timezone.now)),
                ('cancion', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='socialSound.cancion')),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('usuario', 'cancion')},
            },
        ),
        migrations.AddField(
            model_name='cancion',
            name='likes',
            field=models.ManyToManyField(blank=True, related_name='like_list', through='socialSound.Like', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='MensajePrivado',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contenido', models.TextField()),
                ('fecha_envio', models.DateTimeField(default=django.utils.timezone.now)),
                ('leido', models.BooleanField(default=False)),
                ('emisor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='emisor', to=settings.AUTH_USER_MODEL)),
                ('receptor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='receptor', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Playlist',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=100)),
                ('descripcion', models.TextField(max_length=255)),
                ('fecha_creacion', models.DateTimeField(default=django.utils.timezone.now)),
                ('publica', models.BooleanField(default=True)),
                ('canciones', models.ManyToManyField(related_name='cannciones', through='socialSound.CancionPlaylist', to='socialSound.cancion')),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='cancionplaylist',
            name='playlist',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='socialSound.playlist'),
        ),
        migrations.CreateModel(
            name='Guardado',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha_guardado', models.DateTimeField(default=django.utils.timezone.now)),
                ('cancion', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='socialSound.cancion')),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('usuario', 'cancion')},
            },
        ),
        migrations.AlterUniqueTogether(
            name='cancionplaylist',
            unique_together={('cancion', 'playlist')},
        ),
        migrations.CreateModel(
            name='Seguidores',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha_inicio', models.DateTimeField(default=django.utils.timezone.now)),
                ('seguido', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='siguiendo', to=settings.AUTH_USER_MODEL)),
                ('seguidor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='seguidores', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('seguidor', 'seguido')},
            },
        ),
    ]
